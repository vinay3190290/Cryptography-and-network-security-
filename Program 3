#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// Function to calculate the letter frequency in the ciphertext
void calculateFrequency(char ciphertext[], int frequency[]) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char letter = tolower(ciphertext[i]);
            frequency[letter - 'a']++;
        }
    }
}

// Function to display the letter frequency
void displayFrequency(int frequency[]) {
    printf("Letter Frequency:\n");
    for (int i = 0; i < 26; i++) {
        printf("%c: %d\n", 'a' + i, frequency[i]);
    }
    printf("\n");
}

// Function to perform the letter frequency attack and suggest possible plaintexts
void letterFrequencyAttack(char ciphertext[], int topN) {
    int frequency[26] = {0};
    calculateFrequency(ciphertext, frequency);

    // Sort the frequencies to identify the most common letters
    int sortedIndices[26];
    for (int i = 0; i < 26; i++) {
        sortedIndices[i] = i;
    }

    // Bubble sort to sort the indices based on frequency
    for (int i = 0; i < 25; i++) {
        for (int j = 0; j < 25 - i; j++) {
            if (frequency[sortedIndices[j]] < frequency[sortedIndices[j + 1]]) {
                int temp = sortedIndices[j];
                sortedIndices[j] = sortedIndices[j + 1];
                sortedIndices[j + 1] = temp;
            }
        }
    }

    // Display the letter frequency
    displayFrequency(frequency);

    // Display the suggested plaintexts based on frequency analysis
    printf("Suggested Plaintexts:\n");
    for (int i = 0; i < topN; i++) {
        char suggestedPlaintext[27];
        for (int j = 0; j < 26; j++) {
            suggestedPlaintext[j] = 'a' + (sortedIndices[j] - i + 26) % 26;
        }
        suggestedPlaintext[26] = '\0'; // Null-terminate the string
        printf("%d. %s\n", i + 1, suggestedPlaintext);
    }
}

int main() {
    char ciphertext[] = "yourciphertextgoeshere";
    int topN = 10;

    letterFrequencyAttack(ciphertext, topN);

    return 0;
}
