#include <stdio.h>
#include <string.h>

void xorBlocks(char *block1, char *block2, char *result) {
    for (int i = 0; i < 16; i++) {
        result[i] = block1[i] ^ block2[i];
    }
}

void encryptBlock(char *key, char *input, char *output) {
    // Implement your block encryption function here
    // (e.g., AES encryption)
    // This is a placeholder, you should replace it with a real encryption function
    memcpy(output, input, 16);
}

void cbcMac(char *key, char *message, char *mac) {
    char temp[16];
    char previousBlock[16];
    memset(previousBlock, 0, sizeof(previousBlock));

    int numBlocks = strlen(message) / 16;

    for (int i = 0; i < numBlocks; i++) {
        char currentBlock[16];
        memcpy(currentBlock, message + i * 16, 16);

        xorBlocks(currentBlock, previousBlock, temp);
        encryptBlock(key, temp, mac);

        memcpy(previousBlock, mac, 16);
    }
}

int main() {
    char key[16] = "YourSecretKey";  // 128-bit key
    char message[32] = "YourOneBlockMessage";  // 16-byte message (one block)

    char mac[16];
    cbcMac(key, message, mac);

    printf("CBC MAC: ");
    for (int i = 0; i < 16; i++) {
        printf("%02x", (unsigned char)mac[i]);
    }
    printf("\n");

    return 0;
}
