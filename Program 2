#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

// Function to generate a random key stream
void generateKeyStream(int length, int keyStream[]) {
    srand((unsigned int)time(NULL));  // Seed for random number generation

    for (int i = 0; i < length; ++i) {
        keyStream[i] = rand() % 26;  // Generate a random number between 0 and 25
    }
}

// Function to encrypt a message using the one-time pad Vigenère cipher
void encryptVigenere(char plaintext[], int keyStream[], char ciphertext[]) {
    int len = strlen(plaintext);

    for (int i = 0; i < len; ++i) {
        if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            ciphertext[i] = 'a' + (plaintext[i] - 'a' + keyStream[i]) % 26;
        } else if (plaintext[i] >= 'A' && plaintext[i] <= 'Z') {
            ciphertext[i] = 'A' + (plaintext[i] - 'A' + keyStream[i]) % 26;
        } else {
            // Leave non-alphabetic characters unchanged
            ciphertext[i] = plaintext[i];
        }
    }

    ciphertext[len] = '\0'; // Null-terminate the string
}

int main() {
    char plaintext[] = "HelloWorld";
    int keyLength = strlen(plaintext);
    int keyStream[keyLength];
    char ciphertext[keyLength + 1];  // +1 for null terminator

    // Generate a random key stream
    generateKeyStream(keyLength, keyStream);

    // Encrypt the plaintext using the one-time pad Vigenère cipher
    encryptVigenere(plaintext, keyStream, ciphertext);

    // Display the results
    printf("Plaintext: %s\n", plaintext);
    printf("Key Stream: ");
    for (int i = 0; i < keyLength; ++i) {
        printf("%d ", keyStream[i]);
    }
    printf("\n");
    printf("Ciphertext: %s\n", ciphertext);

    return 0;
}
